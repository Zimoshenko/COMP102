#BlueJ class context
comment0.params=
comment0.target=ImageRenderer()
comment1.params=
comment1.target=void\ doRenderImageCore()
comment1.text=\ Core\:\r\n\ Renders\ a\ ppm\ image\ file.\r\n\ Asks\ for\ the\ name\ of\ the\ file,\ then\ calls\ renderImageHelper.\r\n
comment2.params=sc
comment2.target=void\ renderImageHelper(java.util.Scanner)
comment2.text=\ Core\:\r\n\ Renders\ a\ ppm\ image\ file.\r\n\ Renders\ the\ image\ at\ position\ (LEFT,\ TOP).\r\n\ Each\ pixel\ of\ the\ image\ \ is\ rendered\ by\ a\ square\ of\ size\ PIXEL_SIZE\r\n\ Assumes\ that\r\n\ -\ the\ colour\ depth\ is\ 255,\r\n\ -\ there\ is\ just\ one\ image\ in\ the\ file\ (not\ "animated"),\ and\r\n\ -\ there\ are\ no\ comments\ in\ the\ file.\r\n\ The\ first\ four\ tokens\ are\ "P3",\ number\ of\ columns,\ number\ of\ rows,\ 255\r\n\ The\ remaining\ tokens\ are\ the\ pixel\ values\ (red,\ green,\ blue\ for\ each\ pixel)\r\n
comment3.params=
comment3.target=void\ doRenderAnimatedImage()
comment3.text=\ Completion\r\n\ Renders\ a\ ppm\ image\ file\ which\ may\ be\ animated\ (multiple\ images\ in\ the\ file)\r\n\ Asks\ for\ the\ name\ of\ the\ file,\ then\ renders\ the\ image\ at\ position\ (LEFT,\ TOP).\r\n\ Each\ pixel\ of\ the\ image\ \ is\ rendered\ by\ a\ square\ of\ size\ PIXEL_SIZE\r\n\ Renders\ each\ image\ in\ the\ file\ in\ turn\ with\ 200\ mSec\ delay.\r\n\ Repeats\ the\ sequence\ 3\ times.\r\n
comment4.params=
comment4.target=void\ doChallenge()
comment4.text=Challenge\r\n\ handle\ comments\ (by\ noticing\ them\ and\ throwing\ them\ away).\r\n\ \ \ \ \ \ handle\ the\ colour\ depth\ properly\:\ if\ the\ colour\ depth\ is\ 15,\ for\ example,\ \r\n\ \ \ \ \ \ it\ should\ scale\ up\ all\ the\ values\ by\ 255/15\ before\ setting\ the\ color.\r\n\ \ \ \ \ Recognise\ and\ render\ plain\ pgm\ images\ also\ (use\ the\ first\ token\ to\ determine\r\n\ \ \ \ \ which\ version\ to\ render).\r\n
numComments=5
